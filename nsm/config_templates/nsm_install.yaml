---
# Source: nsm/charts/admission-webhook/templates/admission-webhook-secret.tpl
apiVersion: v1
kind: Secret
metadata:
  name: nsm-admission-webhook-certs
  namespace: {{.namespace}}
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMnJ6ZVdVKzlYdEJjbGFHU0ZBOWtFUURXNkgxZmxFU3JXS1BGVHVtTEdXTWxzeVZqCm5kYW5HazkvMmJQbWMzT3cxQTlsMnl4bWhVUURCVDZFSVhsSlBwZ2pZWnVpNVdOSnNKaVhhaWZhM0NkTlRFQkkKRCtOZGk2RDh4SnNKWmhSaTdWcDJyWmRhUTlZZkhkbHZvVHgvREdpYXdHTFhLTDU1VnhFYUlGa25jMDF5MHhqaQpUQzdjRVJmK0ZPYzhIbXlUd0Y4YXBWcTBQUU0xb29SOWtQWUV1OXhDVVZRay9pc1p1a1JrdlFQcUxpM0oybFpjClpiaU5lbFNxSTlaSFhqaWhiUURwTlFIaENqRHJhYy8zdFYzUnIyK2RQS2FSUmJiZTRMbDNoaW9qZUwvZFliY1YKdXJvU2FLcmFpSHNjcW5obkNOV3lpY3Qvd3dTQXFWMXEvck1wZlFJREFRQUJBb0lCQVFDZmQrQldsbmJGLy92dgpycnBUMjZDbGNNbzg5dUpPc3YyRWd1a2ZEYzYyTkgxUXJPcUNNUExra0o3eDlXRUdQSXJuSDA2dnloLzMra3lGCmJ6MWZOaEE3RFNtR1NMUXFyZ2NVTXpyNFRwUVZ1cVYwK014UW9QOGJBOFFrQmErRmQwbGtKM2FzT2RLNThBb0IKZGZzWFBvYVZZbEduL3FkRDhoRitjMTVyeFBPbzc2MDBHVHYzUVRlK0NUaU9jK2tLbmFTNllUemFZNzBwTGdsNAo0V0FSb0ZrZWpLaEpURTh0aW5HeG9wTmtzYnRXSmFXckpqbllrS2E3N2FES0R3cjM3UXYzMjhJOE5FYnkzZ1VjCnJiMEUwT3cyamVhenlXU0VGdzYwaFNLYnp5d0FMaWVmSG4xT3FQZXVIZzlsSlg0ZzJVbU56aHRtUVhJYjRQamYKS1lFWVppakJBb0dCQVBxRXJvQzBnckNkYzJCenlGSW9nbTZjTVdWcnVYamg3TWM5MWtWQk13ZGdJZ0RwVmY3MAowQzVTMzdMbTlGUEpSbzdJQkNpOElNMDFwVjlGS0VSTkZOTlFoUnRoRXpYN0ROaFVGbWlBT0syMXQ1dWMzN2FaClVFMkU0QU9LOTA3cEFkNkpvbVNGc215RlYvZjJhMWxFMU05WXZlSzh2aytVdE9vdDVtSmhMdENOQW9HQkFOK0cKS2Nqb2dKdnp6U0U1UWp5UDVtTWszVk51ejJkMyszWDl5cWtYbDJ6VkJKSmw1UVJhQVg1RUxIcDFzNi9WcURvYgp0QnB1eVRtcFZUY1p1YzltWC9oL3VkckRKSmNmQ2N5TVlrdVV6cUtyRVd0WU5EM1dOaUNRZTJCbDVpUnFUM0hqCnZwNTFiUjIwQTVWM3dSOVZTaDlZdk9yZmZwMTdmM0pqMndpMlZ0aXhBb0dBU2pJVnhNU3htRUZwdEgxV0xROFcKWWxBY1NSOTRsUmJFbTlYeXFody9Vc1hrREVVUFZTMklvcytrdFVXMXcwTHZoTVkwaFNRQ3l3UkNjRTc1T0JGawpRNW1yY29wenVCOGNsTTJDdlh5TVROWnZCTVdYZEdzLzMxV2xTeWRUUzZtekJnZlpjdEF1SWZuMExkcHJ2TXFvCkJLa1J4QitHZGVkakZhQjJoVmluRnRrQ2dZRUFzTG42djRaVWFQbFI3anEvUy9MYVRQa1FwSzZ2L1RhMzhvbysKZVlMVmpvNjlscUpKZUM5Ump1dUgzeXJBYnYyV2pKcnF3eHRrcmRwY0xieUJWS0cwcjEwTkxSR3RGRzdONkpQMgpBNXdiNURFdERKb29jOXV4My8xY0R0T0NLcmlESjZEUlRhZTZKZ24xNjI5TG1lSnRRR3VBc3BNU0lLRk1HcjBvCnFMTEI1NEVDZ1lBTlllWU41VWhFY0NzQjdYN3F6UldtS045MnRwWHBHb0VZbzVpYS8wTnJqUHIwYW1aNXoxaG4KMUl4TzlQREtVeU5INHdCM1pMbHFVcGFXR2hyUFd1cEdnOXllYi9mUnRORENCWFc5U0xxZ04wRlp2YWMyekkrbgp6ZDArMGhWbUkvZDdSYXFRTzlndWFYck8yRENiRTRRR2plOTY3RVRVWE1UTWNFaWRQUmtRNGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFpTVNBd0hnWURWUVFERXhkaFpHMXAKYzNOcGIyNHRZMjl1ZEhKdmJHeGxjaTFqWVRBZUZ3MHhPVEV4TVRReE5qQTNNalphRncweU9URXhNVEV4TmpBMwpNalphTUNReElqQWdCZ05WQkFNVEdXNXpiUzFoWkcxcGMzTnBiMjR0ZDJWaWFHOXZheTF6ZG1Nd2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEYXZONVpUNzFlMEZ5Vm9aSVVEMlFSQU5ib2ZWK1UKUkt0WW84Vk82WXNaWXlXekpXT2QxcWNhVDMvWnMrWnpjN0RVRDJYYkxHYUZSQU1GUG9RaGVVayttQ05obTZMbApZMG13bUpkcUo5cmNKMDFNUUVnUDQxMkxvUHpFbXdsbUZHTHRXbmF0bDFwRDFoOGQyVytoUEg4TWFKckFZdGNvCnZubFhFUm9nV1NkelRYTFRHT0pNTHR3UkYvNFU1endlYkpQQVh4cWxXclE5QXpXaWhIMlE5Z1M3M0VKUlZDVCsKS3htNlJHUzlBK291TGNuYVZseGx1STE2VktvajFrZGVPS0Z0QU9rMUFlRUtNT3Rwei9lMVhkR3ZiNTA4cHBGRgp0dDdndVhlR0tpTjR2OTFodHhXNnVoSm9xdHFJZXh5cWVHY0kxYktKeTMvREJJQ3BYV3Irc3lsOUFnTUJBQUdqCmdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUVzR0ExVWRFUVJFTUVLQ0hXNXpiUzFoWkcxcGMzTnBiMjR0ZDJWaQphRzl2YXkxemRtTXVibk50Z2lGdWMyMHRZV1J0YVhOemFXOXVMWGRsWW1odmIyc3RjM1pqTG01emJTNXpkbU13CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBY25ld3lmMS83NXQyUHVzaXcvN2o3TmwvZmNjRmZndFQ2QVU3NWkKVnJ2SzdHK2VMaTN0cVZXQWhtd2lsekVLd2ROQ0wweEdOb203UklMaXI3UlVVWHVBYVU0MVNVUksxRCtKNXJ0awovL2p5WHRpU1hJWW5rZHVjRUV4WGRKbmxRZm5XeUFrdHlodm5ZSVlYNjk2MThDdnV4UWRjeXNlWUhFb1g2aVJsCk9rVGhpV2pjcFRwbWpaVmpLM29FcUdqWVV5aE9JYm9kcnNVR2ZyR2l2NlAzOFhvdk9TYXN0NFk5djB2T1ZuZGsKNGswV1J5eXF2V3hEQmFHejlnRmV0aWdZRWMyREZWc1gzdzBRUUhLVnJwV1NVTmtYaHNsR2VTd1MyUTlFUDJSdwp6ZTNmYkVHYkZtY3Z4amJxaFkzRzdvNEx0Q01wUWVpb3BLdCtmU285cHlab2RaRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nsm-admission-webhook
  namespace: {{.namespace}}
  labels:
    app: nsm-admission-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nsm-admission-webhook
  template:
    metadata:
      labels:
        app: nsm-admission-webhook
    spec:
      containers:
        - name: nsm-admission-webhook
          image: docker.io/networkservicemesh/admission-webhook@sha256:8f23fb8e366ca95934d7c1825e56e21dce908da2af1f793296af7edcb210646f
          imagePullPolicy: IfNotPresent
          env:
            - name: REPO
              value: "networkservicemesh"
            - name: TAG
              value: "master"
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
          livenessProbe:
            httpGet:
              path: /liveness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /readiness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
      volumes:
        - name: webhook-certs
          secret:
            secretName: nsm-admission-webhook-certs
---
apiVersion: v1
kind: Service
metadata:
  name: nsm-admission-webhook-svc
  namespace: {{.namespace}}
  labels:
    app: nsm-admission-webhook
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    app: nsm-admission-webhook
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: nsm-admission-webhook-cfg
  namespace: {{.namespace}}
  labels:
    app: nsm-admission-webhook
webhooks:
  - name: admission-webhook.networkservicemesh.io
    clientConfig:
      service:
        name: nsm-admission-webhook-svc
        namespace: {{.namespace}}
        path: "/mutate"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBVENDQWVtZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFpTVNBd0hnWURWUVFERXhkaFpHMXAKYzNOcGIyNHRZMjl1ZEhKdmJHeGxjaTFqWVRBZUZ3MHhPVEV4TVRReE5qQTNNalZhRncweU9URXhNVEV4TmpBMwpNalZhTUNJeElEQWVCZ05WQkFNVEYyRmtiV2x6YzJsdmJpMWpiMjUwY205c2JHVnlMV05oTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdVJ1VTRFSUNzbXRSNlpmVTBSVTNKVmQ5NjY4d0l6K2sKM29LZHRtcHNnY1ZYRkNLT1RuMUsvRGVnZzNIZEt6K1p1S0J0SG5vdkY2RjRVM09pbWQ2bXlJd0NrUWozbEM4Lwp4ZExOU3BWNy9peXZZdG9FYTVycVl5NEpORXBuV3dlM1hFTHhUOXdZWlc3c0N6SHJENnpibDNETVhxMTJBbzFDCjF4cC9zTjVsMVE0K1B1VUJxZHlLYzhybHkySHBJNnhQb09oWmtITjRUQnpjc0RHUzlYYWdLQ3l0OGt0WmlHS3kKdEY4TStDbWpQL0tKZE1QY29xbmprWnh1SndNa2xqWDQ3Um0wQlAyem0vUlptV2N2NjdmWWNjQWNiV2xKK05kVwpPNlI5QXRDY3IxeHdKU2YyeXI1VjlVNkVFYjlvT3dHUldNcWo3VFBaSk02L2JUWk1ZUExML3dJREFRQUJvMEl3ClFEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNad2RYK0ZrdThMaHozUQp6WW1PcDBDTDg1YmFUNmRHYndvSkpDbU1weDJZZHpRdUJKcnBSNldvODEwVkpiaU9xK2dVUFRPVithRnk5YlZWCmFEelRONkozTU9CaERuQmh1S3JKdk8yb2g1eHhDdGpvbHVSV3dYOWM0dG0zQ1ZJaUFtTmNLRmx0UWc4UTVnTVkKWkdscDVWWGRyYjdOeER5a3AzNmZqZ25uZFhBMm0zbll6SG1DdHVLQ3BrR0k2SldtUE82NzJDT1N3anoycDl1ZQpDa241MnJFL0l3Mkl1d2tQR09vYnlYaVZRcUc2NW5JYU1ieDBnTmhKeDE3M2p6b3BPcUh4QjVXNFozMzBGMXRYCnBrMjkzRmpWdUNwZzhhaGlSbmRLSWloNGhFc2wvTkwzeVNxbC9waTF4MFZzanp1Y3lLUWF3dW13VTJDWGRjK0YKNzAwL3g1UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - operations: ["CREATE"]
        apiGroups: ["apps", "extensions", ""]
        apiVersions: ["v1", "v1beta1"]
        resources: ["deployments", "services", "pods"]

---
# Source: nsm/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nse-acc
  namespace: {{.namespace}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsc-acc
  namespace: {{.namespace}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsmgr-acc
  namespace: {{.namespace}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: forward-plane-acc
  namespace: {{.namespace}}
---
# Source: nsm/templates/crd-networkserviceendpoints.yaml
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: networkserviceendpoints.networkservicemesh.io
spec:
  conversion:
    strategy: None
  group: networkservicemesh.io
  names:
    kind: NetworkServiceEndpoint
    listKind: NetworkServiceEndpointList
    plural: networkserviceendpoints
    shortNames:
      - nse
      - nses
    singular: networkserviceendpoint
  scope: Namespaced
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
# Source: nsm/templates/crd-networkservicemanagers.yaml
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: networkservicemanagers.networkservicemesh.io
spec:
  conversion:
    strategy: None
  group: networkservicemesh.io
  names:
    kind: NetworkServiceManager
    listKind: NetworkServiceManagerList
    plural: networkservicemanagers
    shortNames:
      - nsm
      - nsms
    singular: networkservicemanager
  scope: Namespaced
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
# Source: nsm/templates/crd-networkservices.yaml
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: networkservices.networkservicemesh.io
spec:
  conversion:
    strategy: None
  group: networkservicemesh.io
  names:
    kind: NetworkService
    listKind: NetworkServiceList
    plural: networkservices
    shortNames:
      - netsvc
      - netsvcs
    singular: networkservice
  scope: Namespaced
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
# Source: nsm/templates/cluster-role-admin.yaml
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nsm-role
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups: ["networkservicemesh.io"]
    resources:
      - "networkservices"
      - "networkserviceendpoints"
      - "networkservicemanagers"
    verbs: ["*"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["nodes", "services", "namespaces"]
    verbs: ["get", "list", "watch"]

---
# Source: nsm/templates/cluster-role-view.yaml
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-network-services-view
  labels:
    # Add these permissions to the "view" default role.
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups: ["networkservicemesh.io"]
    resources: ["networkservices"]
    verbs: ["get", "list", "watch"]

---
# Source: nsm/templates/cluster-role-binding.tpl
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nsm-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-role
subjects:
  - kind: ServiceAccount
    name: nsmgr-acc
    namespace: {{.namespace}}

---
# Source: nsm/templates/nsmgr.tpl
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nsmgr
  namespace: {{.namespace}}
spec:
  selector:
    matchLabels:
      app: nsmgr-daemonset
  template:
    metadata:
      labels:
        app: nsmgr-daemonset
    spec:
      serviceAccount: nsmgr-acc
      containers:
        - name: nsmdp
          image: docker.io/networkservicemesh/nsmdp@sha256:90f083a8901467548312f47982a6d8e5d029d510af29566adc27325a588dec95
          imagePullPolicy: Always
          env:
            - name: INSECURE
              value: "true"
          volumeMounts:
            - name: kubelet-socket
              mountPath: /var/lib/kubelet/device-plugins
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
        - name: nsmd
          image: docker.io/networkservicemesh/nsmd@sha256:84d716aa7f402c5a312b10e72bb73b11d2534823cdeca7fa7f87e02ca1162fa9
          imagePullPolicy: Always
          env:
            - name: INSECURE
              value: "true"
          volumeMounts:
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
            - name: nsm-plugin-socket
              mountPath: /var/lib/networkservicemesh/plugins
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
          livenessProbe:
            httpGet:
              path: /liveness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /readiness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
        - name: nsmd-k8s
          image: docker.io/networkservicemesh/nsmd-k8s@sha256:688302e3d07cfc247f4aa3369c3efa2579d45bc56b75199fe9e2fe38f04fb33f
          imagePullPolicy: Always
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
            - name: nsm-plugin-socket
              mountPath: /var/lib/networkservicemesh/plugins
          env:
            - name: INSECURE
              value: "true"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: kubelet-socket
        - hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
          name: nsm-socket
        - hostPath:
            path: /var/lib/networkservicemesh/plugins
            type: DirectoryOrCreate
          name: nsm-plugin-socket
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket

---
# Source: nsm/templates/vppagent-forwarder.tpl


apiVersion: apps/v1
kind: DaemonSet
spec:
  selector:
    matchLabels:
      app: nsm-vpp-plane
  template:
    metadata:
      labels:
        app: nsm-vpp-plane
    spec:
      hostPID: true
      hostNetwork: true
      serviceAccount: forward-plane-acc
      containers:
        - name: vppagent-forwarder
          securityContext:
            privileged: true
          image: docker.io/networkservicemesh/vppagent-forwarder@sha256:6e26d9652733d17002c4cd5d7921e518b5118ac24e0aa3122ac5b40bd3b98b14
          imagePullPolicy: Always
          env:
            - name: INSECURE
              value: "true"
            - name: NSM_FORWARDER_SRC_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: workspace
              mountPath: /var/lib/networkservicemesh/
              mountPropagation: Bidirectional
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
          livenessProbe:
            httpGet:
              path: /liveness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /readiness
              port: 5555
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
      volumes:
        - hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
          name: workspace
        - hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
          name: spire-agent-socket
metadata:
  name: nsm-vpp-forwarder
  namespace: {{.namespace}}

